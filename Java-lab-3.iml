import kotlin.random.Random

class Die(private var type: String = "d6", private var sides: Int = 6) {
    private var currentSideUp: Int = roll()

    constructor(sides: Int) : this("d$sides", sides)

    constructor(type: String, sides: Int) : this(type, sides)

    fun roll() {
        currentSideUp = Random.nextInt(1, sides + 1)
    }

    fun setCurrentSideUp(side: Int) {
        currentSideUp = side
    }

    fun getCurrentSideUp(): Int {
        return currentSideUp
    }

    fun getType(): String {
        return type
    }

    fun setType(type: String) {
        this.type = type
    }

    fun getSides(): Int {
        return sides
    }

    fun setSides(sides: Int) {
        this.sides = sides
    }
}

class DiceGame {
    fun run() {
        val defaultDie = Die()
        val d20 = Die("d20", 20)
        val percentileDie = Die("Percentile", 10)

        println("Creating a default d6...")
        println("Creating a d20...")
        println("Creating percentile die (a special d10)...")
        println("The current side up for ${defaultDie.getType()} is ${defaultDie.getCurrentSideUp()}")
        println("The current side up for ${d20.getType()} is ${d20.getCurrentSideUp()}")
        println("The current side up for ${percentileDie.getType()} is ${percentileDie.getCurrentSideUp()}")

        println("\nTesting the roll method")

        defaultDie.roll()
        d20.roll()
        percentileDie.roll()

        println("\nRolling the ${defaultDie.getType()}...")
        println("The new value is ${defaultDie.getCurrentSideUp()}")
        println("Rolling the ${d20.getType()}...")
        println("The current side up for ${d20.getType()} is ${d20.getCurrentSideUp()}")
        println("Rolling the ${percentileDie.getType()}...")
        println("The new value is ${percentileDie.getCurrentSideUp()}")

        println("\nSetting the ${d20.getType()} to show 20...")
        d20.setCurrentSideUp(20)
        println("The side up is now ${d20.getCurrentSideUp()}.")

        println("\nCreating 5 ${defaultDie.getType()}...")
        var rolls = 0
        var count = 0
        while (count < 5) {
            defaultDie.roll()
            rolls++
            if (defaultDie.getCurrentSideUp() == 6) {
                count++
            } else {
                count = 0
            }
        }
        println("YAHTZEE! It took $rolls rolls.")
    }
}

fun main() {
    val game = DiceGame()
    game.run()
}
